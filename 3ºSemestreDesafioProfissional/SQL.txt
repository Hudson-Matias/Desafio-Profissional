create database cidao;
use cidao;


CREATE TABLE tb_rotas (
                nmRota INT AUTO_INCREMENT NOT NULL,
                nomeRua VARCHAR(30) NOT NULL,
                nomeBairro VARCHAR(20) NOT NULL,
                PRIMARY KEY (nmRota)
);


CREATE TABLE tb_fucionario (
                numeroCartao INT AUTO_INCREMENT NOT NULL,
                nomeFuncionario VARCHAR(50) NOT NULL,
                numeroCpf CHAR(11) NOT NULL,
                idadeFuncionario  INT NOT NULL,
                PRIMARY KEY (numeroCartao)
);


CREATE TABLE tb_caminhoes  (
                idCaminhao INT AUTO_INCREMENT NOT NULL,
                placaCaminhao VARCHAR(10) NOT NULL,
                marcaCaminhao VARCHAR(20) NOT NULL,
                PRIMARY KEY (idCaminhao)
);


CREATE TABLE tb_lixo (
                numeroLote INT AUTO_INCREMENT NOT NULL,
                idCaminhao INT NOT NULL,
                numeroCartao INT NOT NULL,
                nmRota INT NOT NULL,
                dataColeta DATE NOT NULL,
                tipoLixo VARCHAR(15) NOT NULL,
                quantidadeLixo NUMERIC(9,3) NOT NULL,
                PRIMARY KEY (numeroLote, idCaminhao, numeroCartao, nmRota)
);


ALTER TABLE tb_lixo ADD CONSTRAINT tb_rotas_tb_lixo_fk
FOREIGN KEY (nmRota)
REFERENCES tb_rotas (nmRota)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE tb_lixo ADD CONSTRAINT tb_fucionario_tb_lixo_fk
FOREIGN KEY (numeroCartao)
REFERENCES tb_fucionario (numeroCartao)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

ALTER TABLE tb_lixo ADD CONSTRAINT tb_caminhoes__tb_lixo_fk
FOREIGN KEY (idCaminhao)
REFERENCES tb_caminhoes  (idCaminhao)
ON DELETE NO ACTION
ON UPDATE NO ACTION;


INSERT INTO tb_fucionario (nomeFuncionario, numeroCpf, idadeFuncionario) VALUES
('João Silva', '12345678901', 30),
('Maria Santos', '98765432109', 25),
('Carlos Oliveira', '56789012345', 35);

INSERT INTO tb_rotas (nomeRua, nomeBairro) VALUES
('Rua Iara', 'Bairro Oliveira'),
('Rua Moreno', 'Bairro America'),
('Rua BigCida', 'Bairro Jonas');

INSERT INTO tb_caminhoes (placaCaminhao, marcaCaminhao) VALUES
('ABC1234', 'Marca Ford'),
('DEF5678', 'Marca Tesla'),
('GHI9012', 'Marca Benz');

INSERT INTO tb_lixo (idCaminhao, numeroCartao, nmRota, dataColeta, tipoLixo, quantidadeLixo) VALUES
(1, 1, 1, '2023-06-01', 'Orgânico', 5.25),
(2, 2, 2, '2023-06-02', 'Reciclável', 3.8),
(3, 3, 3, '2023-06-03', 'Resíduos Eletrônicos', 1.2);


SELECT l.numeroLote, f.nomeFuncionario, r.nomeRua, c.placaCaminhao, l.dataColeta, l.tipoLixo, l.quantidadeLixo
FROM tb_lixo l
JOIN tb_fucionario f ON l.numeroCartao = f.numeroCartao
JOIN tb_rotas r ON l.nmRota = r.nmRota
JOIN tb_caminhoes c ON l.idCaminhao = c.idCaminhao;

SELECT tipoLixo, SUM(quantidadeLixo) AS totalQuantidadeLixo
FROM tb_lixo
GROUP BY tipoLixo;

SELECT f.nomeFuncionario, l.dataColeta, l.quantidadeLixo
FROM tb_lixo l
JOIN tb_fucionario f ON l.numeroCartao = f.numeroCartao
WHERE l.quantidadeLixo = (
    SELECT MAX(quantidadeLixo)
    FROM tb_lixo
    WHERE dataColeta = '2023-06-01'
);

SELECT f.nomeFuncionario, SUM(l.quantidadeLixo) AS totalQuantidadeLixo
FROM tb_lixo l
INNER JOIN tb_fucionario f ON l.numeroCartao = f.numeroCartao
GROUP BY f.nomeFuncionario
HAVING SUM(l.quantidadeLixo) = (
  SELECT MAX(totalQuantidadeLixo)
  FROM (
    SELECT SUM(quantidadeLixo) AS totalQuantidadeLixo
    FROM tb_lixo
    GROUP BY numeroCartao
  ) AS subquery
);

SELECT r.nmRota, r.nomeRua, r.nomeBairro, COUNT(l.numeroLote) AS numLotes
FROM tb_rotas r
INNER JOIN tb_lixo l ON r.nmRota = l.nmRota
GROUP BY r.nmRota, r.nomeRua, r.nomeBairro;

SELECT l.numeroLote, f.nomeFuncionario, r.nomeRua, r.nomeBairro, c.placaCaminhao, l.dataColeta, l.tipoLixo, l.quantidadeLixo
FROM tb_lixo l
INNER JOIN tb_fucionario f ON l.numeroCartao = f.numeroCartao
INNER JOIN tb_rotas r ON l.nmRota = r.nmRota
INNER JOIN tb_caminhoes c ON l.idCaminhao = c.idCaminhao;
